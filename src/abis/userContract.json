{
  "contractName": "UserContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allUserAddrs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allUserNames",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_userName",
          "type": "string"
        }
      ],
      "name": "uniqueUsername",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isUnique",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_imgHash",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getUserImg",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllUsers",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allUserAddrs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allUserNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_imgHash\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUsers\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserImg\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_userName\",\"type\":\"string\"}],\"name\":\"uniqueUsername\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isUnique\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/jamie/Desktop/Thesis/planetGit/src/contracts/UserContract.sol\":\"UserContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/jamie/Desktop/Thesis/planetGit/src/contracts/UserContract.sol\":{\"keccak256\":\"0xcdb654f7d4076f84f1abf1f47edbeefce6e143211e4692dc1d385158cb2ad8dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e442188ba57ce1c315b97baa8085bfe1777d747fd0626fd065a7547bcb69d887\",\"dweb:/ipfs/QmUQP6SRfPx5rksFkeH2gw5xptRHqbTJZZTjFPQ1mKHBJt\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610daa806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636ef8fa3e1161005b5780636ef8fa3e1461010057806387b162b51461011e57806395f4b27c1461013a578063e2842d791461016a5761007d565b806312958f1c146100825780632eabe48c146100a057806350fc3ee2146100d0575b600080fd5b61008a610188565b6040516100979190610bd6565b60405180910390f35b6100ba60048036038101906100b591906109f4565b610269565b6040516100c79190610bd6565b60405180910390f35b6100ea60048036038101906100e59190610947565b610322565b6040516100f79190610bbb565b60405180910390f35b610108610371565b6040516101159190610bd6565b60405180910390f35b61013860048036038101906101339190610988565b610452565b005b610154600480360381019061014f91906109f4565b61071c565b6040516101619190610b7e565b60405180910390f35b610172610758565b60405161017f9190610b99565b60405180910390f35b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561025f5780601f106102345761010080835404028352916020019161025f565b820191906000526020600020905b81548152906001019060200180831161024257829003601f168201915b5050505050905090565b6003818154811061027657fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b505050505081565b6000600115156002836040516103389190610b67565b908152602001604051809103902060030160009054906101000a900460ff16151514610367576001905061036c565b600090505b919050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104485780601f1061041d57610100808354040283529160200191610448565b820191906000526020600020905b81548152906001019060200180831161042b57829003601f168201915b5050505050905090565b61045b82610322565b156107185760405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001600115158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061053b929190610841565b506040820151816002019080519060200190610558929190610841565b5060608201518160030160006101000a81548160ff02191690831515021790555090505060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001600115158152506002836040516105c69190610b67565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610637929190610841565b506040820151816002019080519060200190610654929190610841565b5060608201518160030160006101000a81548160ff0219169083151502179055509050506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610716929190610841565b505b5050565b6001818154811061072957fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610838578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b50505050508152602001906001019061077c565b50505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061088257805160ff19168380011785556108b0565b828001600101855582156108b0579182015b828111156108af578251825591602001919060010190610894565b5b5090506108bd91906108c1565b5090565b5b808211156108da5760008160009055506001016108c2565b5090565b600082601f8301126108ef57600080fd5b81356109026108fd82610c25565b610bf8565b9150808252602083016020830185838301111561091e57600080fd5b610929838284610d0a565b50505092915050565b60008135905061094181610d5d565b92915050565b60006020828403121561095957600080fd5b600082013567ffffffffffffffff81111561097357600080fd5b61097f848285016108de565b91505092915050565b6000806040838503121561099b57600080fd5b600083013567ffffffffffffffff8111156109b557600080fd5b6109c1858286016108de565b925050602083013567ffffffffffffffff8111156109de57600080fd5b6109ea858286016108de565b9150509250929050565b600060208284031215610a0657600080fd5b6000610a1484828501610932565b91505092915050565b6000610a298383610ac4565b905092915050565b610a3a81610cc2565b82525050565b6000610a4b82610c61565b610a558185610c84565b935083602082028501610a6785610c51565b8060005b85811015610aa35784840389528151610a848582610a1d565b9450610a8f83610c77565b925060208a01995050600181019050610a6b565b50829750879550505050505092915050565b610abe81610cd4565b82525050565b6000610acf82610c6c565b610ad98185610c95565b9350610ae9818560208601610d19565b610af281610d4c565b840191505092915050565b6000610b0882610c6c565b610b128185610ca6565b9350610b22818560208601610d19565b610b2b81610d4c565b840191505092915050565b6000610b4182610c6c565b610b4b8185610cb7565b9350610b5b818560208601610d19565b80840191505092915050565b6000610b738284610b36565b915081905092915050565b6000602082019050610b936000830184610a31565b92915050565b60006020820190508181036000830152610bb38184610a40565b905092915050565b6000602082019050610bd06000830184610ab5565b92915050565b60006020820190508181036000830152610bf08184610afd565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715610c1b57600080fd5b8060405250919050565b600067ffffffffffffffff821115610c3c57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000610ccd82610ce0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d37578082015181840152602081019050610d1c565b83811115610d46576000848401525b50505050565b6000601f19601f8301169050919050565b610d6681610d00565b8114610d7157600080fd5b5056fea26469706673582212202011d11948ce8fee3038e8ce9c4bf07243513cfaf5b48ed54998ae5331c0b6ff64736f6c63430007010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80636ef8fa3e1161005b5780636ef8fa3e1461010057806387b162b51461011e57806395f4b27c1461013a578063e2842d791461016a5761007d565b806312958f1c146100825780632eabe48c146100a057806350fc3ee2146100d0575b600080fd5b61008a610188565b6040516100979190610bd6565b60405180910390f35b6100ba60048036038101906100b591906109f4565b610269565b6040516100c79190610bd6565b60405180910390f35b6100ea60048036038101906100e59190610947565b610322565b6040516100f79190610bbb565b60405180910390f35b610108610371565b6040516101159190610bd6565b60405180910390f35b61013860048036038101906101339190610988565b610452565b005b610154600480360381019061014f91906109f4565b61071c565b6040516101619190610b7e565b60405180910390f35b610172610758565b60405161017f9190610b99565b60405180910390f35b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561025f5780601f106102345761010080835404028352916020019161025f565b820191906000526020600020905b81548152906001019060200180831161024257829003601f168201915b5050505050905090565b6003818154811061027657fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b505050505081565b6000600115156002836040516103389190610b67565b908152602001604051809103902060030160009054906101000a900460ff16151514610367576001905061036c565b600090505b919050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104485780601f1061041d57610100808354040283529160200191610448565b820191906000526020600020905b81548152906001019060200180831161042b57829003601f168201915b5050505050905090565b61045b82610322565b156107185760405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001600115158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061053b929190610841565b506040820151816002019080519060200190610558929190610841565b5060608201518160030160006101000a81548160ff02191690831515021790555090505060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001600115158152506002836040516105c69190610b67565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610637929190610841565b506040820151816002019080519060200190610654929190610841565b5060608201518160030160006101000a81548160ff0219169083151502179055509050506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610716929190610841565b505b5050565b6001818154811061072957fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610838578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b50505050508152602001906001019061077c565b50505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061088257805160ff19168380011785556108b0565b828001600101855582156108b0579182015b828111156108af578251825591602001919060010190610894565b5b5090506108bd91906108c1565b5090565b5b808211156108da5760008160009055506001016108c2565b5090565b600082601f8301126108ef57600080fd5b81356109026108fd82610c25565b610bf8565b9150808252602083016020830185838301111561091e57600080fd5b610929838284610d0a565b50505092915050565b60008135905061094181610d5d565b92915050565b60006020828403121561095957600080fd5b600082013567ffffffffffffffff81111561097357600080fd5b61097f848285016108de565b91505092915050565b6000806040838503121561099b57600080fd5b600083013567ffffffffffffffff8111156109b557600080fd5b6109c1858286016108de565b925050602083013567ffffffffffffffff8111156109de57600080fd5b6109ea858286016108de565b9150509250929050565b600060208284031215610a0657600080fd5b6000610a1484828501610932565b91505092915050565b6000610a298383610ac4565b905092915050565b610a3a81610cc2565b82525050565b6000610a4b82610c61565b610a558185610c84565b935083602082028501610a6785610c51565b8060005b85811015610aa35784840389528151610a848582610a1d565b9450610a8f83610c77565b925060208a01995050600181019050610a6b565b50829750879550505050505092915050565b610abe81610cd4565b82525050565b6000610acf82610c6c565b610ad98185610c95565b9350610ae9818560208601610d19565b610af281610d4c565b840191505092915050565b6000610b0882610c6c565b610b128185610ca6565b9350610b22818560208601610d19565b610b2b81610d4c565b840191505092915050565b6000610b4182610c6c565b610b4b8185610cb7565b9350610b5b818560208601610d19565b80840191505092915050565b6000610b738284610b36565b915081905092915050565b6000602082019050610b936000830184610a31565b92915050565b60006020820190508181036000830152610bb38184610a40565b905092915050565b6000602082019050610bd06000830184610ab5565b92915050565b60006020820190508181036000830152610bf08184610afd565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715610c1b57600080fd5b8060405250919050565b600067ffffffffffffffff821115610c3c57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000610ccd82610ce0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d37578082015181840152602081019050610d1c565b83811115610d46576000848401525b50505050565b6000601f19601f8301169050919050565b610d6681610d00565b8114610d7157600080fd5b5056fea26469706673582212202011d11948ce8fee3038e8ce9c4bf07243513cfaf5b48ed54998ae5331c0b6ff64736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "96:1525:2:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "96:1525:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1211:117;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;449:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;529:225;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1377:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;789:373;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;337:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1520:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1211:117;1254:13;1287:12;:24;1300:10;1287:24;;;;;;;;;;;;;;;:33;;1280:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1211:117;:::o;449:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;529:225::-;598:13;660:4;627:37;;:11;639:9;627:22;;;;;;:::i;:::-;;;;;;;;;;;;;:29;;;;;;;;;;;;:37;;;624:123;;687:4;680:11;;;;624:123;730:5;723:12;;529:225;;;;:::o;1377:115::-;1419:13;1452:12;:24;1465:10;1452:24;;;;;;;;;;;;;;;:32;;1445:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1377:115;:::o;789:373::-;878:25;893:9;878:14;:25::i;:::-;875:280;;;942:43;;;;;;;;947:10;942:43;;;;;;959:9;942:43;;;;970:8;942:43;;;;980:4;942:43;;;;;915:12;:24;928:10;915:24;;;;;;;;;;;;;;;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1021:43;;;;;;;;1026:10;1021:43;;;;;;1038:9;1021:43;;;;1049:8;1021:43;;;;1059:4;1021:43;;;;;996:11;1008:9;996:22;;;;;;:::i;:::-;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1075:12;1093:10;1075:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1115:12;1133:9;1115:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;875:280;789:373;;:::o;337:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1520:98::-;1563:15;1598:12;1591:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1520:98;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;6:442::-;;108:3;101:4;93:6;89:17;85:27;75:2;;126:1;123;116:12;75:2;163:6;150:20;185:65;200:49;242:6;200:49;:::i;:::-;185:65;:::i;:::-;176:74;;270:6;263:5;256:21;306:4;298:6;294:17;339:4;332:5;328:16;374:3;365:6;360:3;356:16;353:25;350:2;;;391:1;388;381:12;350:2;401:41;435:6;430:3;425;401:41;:::i;:::-;68:380;;;;;;;:::o;456:130::-;;536:6;523:20;514:29;;548:33;575:5;548:33;:::i;:::-;508:78;;;;:::o;593:347::-;;707:2;695:9;686:7;682:23;678:32;675:2;;;723:1;720;713:12;675:2;786:1;775:9;771:17;758:31;809:18;801:6;798:30;795:2;;;841:1;838;831:12;795:2;861:63;916:7;907:6;896:9;892:22;861:63;:::i;:::-;851:73;;737:193;669:271;;;;:::o;947:578::-;;;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1104:1;1101;1094:12;1056:2;1167:1;1156:9;1152:17;1139:31;1190:18;1182:6;1179:30;1176:2;;;1222:1;1219;1212:12;1176:2;1242:63;1297:7;1288:6;1277:9;1273:22;1242:63;:::i;:::-;1232:73;;1118:193;1370:2;1359:9;1355:18;1342:32;1394:18;1386:6;1383:30;1380:2;;;1426:1;1423;1416:12;1380:2;1446:63;1501:7;1492:6;1481:9;1477:22;1446:63;:::i;:::-;1436:73;;1321:194;1050:475;;;;;:::o;1532:241::-;;1636:2;1624:9;1615:7;1611:23;1607:32;1604:2;;;1652:1;1649;1642:12;1604:2;1687:1;1704:53;1749:7;1740:6;1729:9;1725:22;1704:53;:::i;:::-;1694:63;;1666:97;1598:175;;;;:::o;1781:193::-;;1902:66;1964:3;1956:6;1902:66;:::i;:::-;1888:80;;1881:93;;;;:::o;1982:113::-;2065:24;2083:5;2065:24;:::i;:::-;2060:3;2053:37;2047:48;;:::o;2131:928::-;;2296:64;2354:5;2296:64;:::i;:::-;2373:96;2462:6;2457:3;2373:96;:::i;:::-;2366:103;;2492:3;2534:4;2526:6;2522:17;2517:3;2513:27;2561:66;2621:5;2561:66;:::i;:::-;2647:7;2675:1;2660:360;2685:6;2682:1;2679:13;2660:360;;;2747:9;2741:4;2737:20;2732:3;2725:33;2792:6;2786:13;2814:84;2893:4;2878:13;2814:84;:::i;:::-;2806:92;;2915:70;2978:6;2915:70;:::i;:::-;2905:80;;3008:4;3003:3;2999:14;2992:21;;2717:303;2707:1;2704;2700:9;2695:14;;2660:360;;;2664:14;3033:4;3026:11;;3050:3;3043:10;;2275:784;;;;;;;;;:::o;3067:104::-;3144:21;3159:5;3144:21;:::i;:::-;3139:3;3132:34;3126:45;;:::o;3178:327::-;;3280:39;3313:5;3280:39;:::i;:::-;3331:61;3385:6;3380:3;3331:61;:::i;:::-;3324:68;;3397:52;3442:6;3437:3;3430:4;3423:5;3419:16;3397:52;:::i;:::-;3470:29;3492:6;3470:29;:::i;:::-;3465:3;3461:39;3454:46;;3260:245;;;;;:::o;3512:347::-;;3624:39;3657:5;3624:39;:::i;:::-;3675:71;3739:6;3734:3;3675:71;:::i;:::-;3668:78;;3751:52;3796:6;3791:3;3784:4;3777:5;3773:16;3751:52;:::i;:::-;3824:29;3846:6;3824:29;:::i;:::-;3819:3;3815:39;3808:46;;3604:255;;;;;:::o;3866:360::-;;3996:39;4029:5;3996:39;:::i;:::-;4047:89;4129:6;4124:3;4047:89;:::i;:::-;4040:96;;4141:52;4186:6;4181:3;4174:4;4167:5;4163:16;4141:52;:::i;:::-;4214:6;4209:3;4205:16;4198:23;;3976:250;;;;;:::o;4233:275::-;;4388:95;4479:3;4470:6;4388:95;:::i;:::-;4381:102;;4500:3;4493:10;;4369:139;;;;:::o;4515:222::-;;4642:2;4631:9;4627:18;4619:26;;4656:71;4724:1;4713:9;4709:17;4700:6;4656:71;:::i;:::-;4613:124;;;;:::o;4744:410::-;;4941:2;4930:9;4926:18;4918:26;;4991:9;4985:4;4981:20;4977:1;4966:9;4962:17;4955:47;5016:128;5139:4;5130:6;5016:128;:::i;:::-;5008:136;;4912:242;;;;:::o;5161:210::-;;5282:2;5271:9;5267:18;5259:26;;5296:65;5358:1;5347:9;5343:17;5334:6;5296:65;:::i;:::-;5253:118;;;;:::o;5378:310::-;;5525:2;5514:9;5510:18;5502:26;;5575:9;5569:4;5565:20;5561:1;5550:9;5546:17;5539:47;5600:78;5673:4;5664:6;5600:78;:::i;:::-;5592:86;;5496:192;;;;:::o;5695:256::-;;5757:2;5751:9;5741:19;;5795:4;5787:6;5783:17;5894:6;5882:10;5879:22;5858:18;5846:10;5843:34;5840:62;5837:2;;;5915:1;5912;5905:12;5837:2;5935:10;5931:2;5924:22;5735:216;;;;:::o;5958:322::-;;6102:18;6094:6;6091:30;6088:2;;;6134:1;6131;6124:12;6088:2;6201:4;6197:9;6190:4;6182:6;6178:17;6174:33;6166:41;;6265:4;6259;6255:15;6247:23;;6025:255;;;:::o;6287:161::-;;6383:3;6375:11;;6421:4;6416:3;6412:14;6404:22;;6369:79;;;:::o;6455:147::-;;6574:5;6568:12;6558:22;;6539:63;;;:::o;6609:122::-;;6703:5;6697:12;6687:22;;6668:63;;;:::o;6738:118::-;;6846:4;6841:3;6837:14;6829:22;;6823:33;;;:::o;6864:188::-;;7004:6;6999:3;6992:19;7041:4;7036:3;7032:14;7017:29;;6985:67;;;;:::o;7061:153::-;;7166:6;7161:3;7154:19;7203:4;7198:3;7194:14;7179:29;;7147:67;;;;:::o;7223:163::-;;7338:6;7333:3;7326:19;7375:4;7370:3;7366:14;7351:29;;7319:67;;;;:::o;7395:145::-;;7531:3;7516:18;;7509:31;;;;:::o;7548:91::-;;7610:24;7628:5;7610:24;:::i;:::-;7599:35;;7593:46;;;:::o;7646:85::-;;7719:5;7712:13;7705:21;7694:32;;7688:43;;;:::o;7738:121::-;;7811:42;7804:5;7800:54;7789:65;;7783:76;;;:::o;7866:72::-;;7928:5;7917:16;;7911:27;;;:::o;7946:145::-;8027:6;8022:3;8017;8004:30;8083:1;8074:6;8069:3;8065:16;8058:27;7997:94;;;:::o;8100:268::-;8165:1;8172:101;8186:6;8183:1;8180:13;8172:101;;;8262:1;8257:3;8253:11;8247:18;8243:1;8238:3;8234:11;8227:39;8208:2;8205:1;8201:10;8196:15;;8172:101;;;8288:6;8285:1;8282:13;8279:2;;;8353:1;8344:6;8339:3;8335:16;8328:27;8279:2;8149:219;;;;:::o;8376:97::-;;8464:2;8460:7;8455:2;8448:5;8444:14;8440:28;8430:38;;8424:49;;;:::o;8481:117::-;8550:24;8568:5;8550:24;:::i;:::-;8543:5;8540:35;8530:2;;8589:1;8586;8579:12;8530:2;8524:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract UserContract {\r\n    \r\n    struct User {\r\n        address _address;\r\n        string userName;\r\n        string imgHash;\r\n        bool exists;\r\n    }\r\n\r\n    // mapping address to User \r\n    mapping (address => User) UserAddrsMap;\r\n    address[] public allUserAddrs;\r\n    // mapping address to User \r\n    mapping (string => User) userNameMap;\r\n    string[] public allUserNames;\r\n    \r\n    \r\n    // Check Username is unique\r\n    function uniqueUsername(string memory _userName) public view returns(bool isUnique) {\r\n        if(userNameMap[_userName].exists != true){\r\n            return true;\r\n        } else{\r\n            return false;\r\n        }\r\n    }\r\n    // Create User with Img\r\n    function createUser(string memory _userName, string memory _imgHash) public{\r\n        if(uniqueUsername(_userName)){\r\n        UserAddrsMap[msg.sender] = User(msg.sender, _userName, _imgHash, true);\r\n        userNameMap[_userName] = User(msg.sender, _userName, _imgHash, true);\r\n        allUserAddrs.push(msg.sender);\r\n        allUserNames.push(_userName);\r\n        }\r\n    }\r\n    // Get Username with Address function\r\n    function getUserName() public view returns(string memory) {\r\n        return UserAddrsMap[msg.sender].userName;\r\n    }\r\n    // Get User Img with Address function\r\n    function getUserImg() public view returns(string memory) {\r\n        return UserAddrsMap[msg.sender].imgHash;\r\n    }\r\n    // Get All Users\r\n    function getAllUsers() public view returns(string[] memory) {\r\n        return allUserNames;\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\jamie\\Desktop\\Thesis\\planetGit\\src\\contracts\\UserContract.sol",
  "ast": {
    "absolutePath": "/C/Users/jamie/Desktop/Thesis/planetGit/src/contracts/UserContract.sol",
    "exportedSymbols": {
      "UserContract": [
        351
      ]
    },
    "id": 352,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 221,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:2"
      },
      {
        "id": 222,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 351,
        "linearizedBaseContracts": [
          351
        ],
        "name": "UserContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "UserContract.User",
            "id": 231,
            "members": [
              {
                "constant": false,
                "id": 224,
                "mutability": "mutable",
                "name": "_address",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "154:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 223,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "154:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 226,
                "mutability": "mutable",
                "name": "userName",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "181:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 225,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "181:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 228,
                "mutability": "mutable",
                "name": "imgHash",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "207:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 227,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "207:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 230,
                "mutability": "mutable",
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "232:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 229,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "232:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 351,
            "src": "131:120:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 235,
            "mutability": "mutable",
            "name": "UserAddrsMap",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "292:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
              "typeString": "mapping(address => struct UserContract.User)"
            },
            "typeName": {
              "id": 234,
              "keyType": {
                "id": 232,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "301:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "292:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                "typeString": "mapping(address => struct UserContract.User)"
              },
              "valueType": {
                "id": 233,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 231,
                "src": "312:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                  "typeString": "struct UserContract.User"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "95f4b27c",
            "id": 238,
            "mutability": "mutable",
            "name": "allUserAddrs",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "337:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 236,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "337:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 237,
              "nodeType": "ArrayTypeName",
              "src": "337:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 242,
            "mutability": "mutable",
            "name": "userNameMap",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "406:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$231_storage_$",
              "typeString": "mapping(string => struct UserContract.User)"
            },
            "typeName": {
              "id": 241,
              "keyType": {
                "id": 239,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "415:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "406:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$231_storage_$",
                "typeString": "mapping(string => struct UserContract.User)"
              },
              "valueType": {
                "id": 240,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 231,
                "src": "425:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                  "typeString": "struct UserContract.User"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "2eabe48c",
            "id": 245,
            "mutability": "mutable",
            "name": "allUserNames",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "449:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 243,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "449:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 244,
              "nodeType": "ArrayTypeName",
              "src": "449:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "613:141:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 252,
                          "name": "userNameMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "627:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$231_storage_$",
                            "typeString": "mapping(string memory => struct UserContract.User storage ref)"
                          }
                        },
                        "id": 254,
                        "indexExpression": {
                          "id": 253,
                          "name": "_userName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 247,
                          "src": "639:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "627:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$231_storage",
                          "typeString": "struct UserContract.User storage ref"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 230,
                      "src": "627:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "660:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "627:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 263,
                    "nodeType": "Block",
                    "src": "708:39:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "730:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 251,
                        "id": 262,
                        "nodeType": "Return",
                        "src": "723:12:2"
                      }
                    ]
                  },
                  "id": 264,
                  "nodeType": "IfStatement",
                  "src": "624:123:2",
                  "trueBody": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "665:38:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "687:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 251,
                        "id": 259,
                        "nodeType": "Return",
                        "src": "680:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "50fc3ee2",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniqueUsername",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "_userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "553:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "552:25:2"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "isUnique",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "598:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "597:15:2"
            },
            "scope": 351,
            "src": "529:225:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "864:298:2",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 274,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "893:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 273,
                      "name": "uniqueUsername",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "878:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) view returns (bool)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 315,
                  "nodeType": "IfStatement",
                  "src": "875:280:2",
                  "trueBody": {
                    "id": 314,
                    "nodeType": "Block",
                    "src": "904:251:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 276,
                              "name": "UserAddrsMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 235,
                              "src": "915:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                "typeString": "mapping(address => struct UserContract.User storage ref)"
                              }
                            },
                            "id": 279,
                            "indexExpression": {
                              "expression": {
                                "id": 277,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "928:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "928:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "915:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage",
                              "typeString": "struct UserContract.User storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 281,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "947:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "947:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 283,
                                "name": "_userName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "959:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 284,
                                "name": "_imgHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 270,
                                "src": "970:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "980:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 280,
                              "name": "User",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "942:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_User_$231_storage_ptr_$",
                                "typeString": "type(struct UserContract.User storage pointer)"
                              }
                            },
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "942:43:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_memory_ptr",
                              "typeString": "struct UserContract.User memory"
                            }
                          },
                          "src": "915:70:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$231_storage",
                            "typeString": "struct UserContract.User storage ref"
                          }
                        },
                        "id": 288,
                        "nodeType": "ExpressionStatement",
                        "src": "915:70:2"
                      },
                      {
                        "expression": {
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 289,
                              "name": "userNameMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "996:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$231_storage_$",
                                "typeString": "mapping(string memory => struct UserContract.User storage ref)"
                              }
                            },
                            "id": 291,
                            "indexExpression": {
                              "id": 290,
                              "name": "_userName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "1008:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "996:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage",
                              "typeString": "struct UserContract.User storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 293,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1026:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1026:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 295,
                                "name": "_userName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "1038:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 296,
                                "name": "_imgHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 270,
                                "src": "1049:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1059:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 292,
                              "name": "User",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "1021:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_User_$231_storage_ptr_$",
                                "typeString": "type(struct UserContract.User storage pointer)"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1021:43:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_memory_ptr",
                              "typeString": "struct UserContract.User memory"
                            }
                          },
                          "src": "996:68:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$231_storage",
                            "typeString": "struct UserContract.User storage ref"
                          }
                        },
                        "id": 300,
                        "nodeType": "ExpressionStatement",
                        "src": "996:68:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 304,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1093:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1093:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 301,
                              "name": "allUserAddrs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "1075:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1075:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1075:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 307,
                        "nodeType": "ExpressionStatement",
                        "src": "1075:29:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 311,
                              "name": "_userName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "1133:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 308,
                              "name": "allUserNames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 245,
                              "src": "1115:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1115:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                              "typeString": "function (string storage ref)"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1115:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 313,
                        "nodeType": "ExpressionStatement",
                        "src": "1115:28:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "87b162b5",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "809:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "_imgHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "834:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:49:2"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:0:2"
            },
            "scope": 351,
            "src": "789:373:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "1269:59:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 322,
                        "name": "UserAddrsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "1287:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                          "typeString": "mapping(address => struct UserContract.User storage ref)"
                        }
                      },
                      "id": 325,
                      "indexExpression": {
                        "expression": {
                          "id": 323,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1300:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1300:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1287:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$231_storage",
                        "typeString": "struct UserContract.User storage ref"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "userName",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 226,
                    "src": "1287:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 321,
                  "id": 327,
                  "nodeType": "Return",
                  "src": "1280:40:2"
                }
              ]
            },
            "functionSelector": "12958f1c",
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1231:2:2"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "1254:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1253:15:2"
            },
            "scope": 351,
            "src": "1211:117:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "1434:58:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 334,
                        "name": "UserAddrsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "1452:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                          "typeString": "mapping(address => struct UserContract.User storage ref)"
                        }
                      },
                      "id": 337,
                      "indexExpression": {
                        "expression": {
                          "id": 335,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1465:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1465:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1452:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$231_storage",
                        "typeString": "struct UserContract.User storage ref"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "imgHash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 228,
                    "src": "1452:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 333,
                  "id": 339,
                  "nodeType": "Return",
                  "src": "1445:39:2"
                }
              ]
            },
            "functionSelector": "6ef8fa3e",
            "id": 341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserImg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1396:2:2"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "1419:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:15:2"
            },
            "scope": 351,
            "src": "1377:115:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "1580:38:2",
              "statements": [
                {
                  "expression": {
                    "id": 347,
                    "name": "allUserNames",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 245,
                    "src": "1598:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 346,
                  "id": 348,
                  "nodeType": "Return",
                  "src": "1591:19:2"
                }
              ]
            },
            "functionSelector": "e2842d79",
            "id": 350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllUsers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:2:2"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "1563:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 343,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1563:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 344,
                    "nodeType": "ArrayTypeName",
                    "src": "1563:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1562:17:2"
            },
            "scope": 351,
            "src": "1520:98:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 352,
        "src": "96:1525:2"
      }
    ],
    "src": "33:1588:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/jamie/Desktop/Thesis/planetGit/src/contracts/UserContract.sol",
    "exportedSymbols": {
      "UserContract": [
        351
      ]
    },
    "id": 352,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 221,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:2"
      },
      {
        "id": 222,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 351,
        "linearizedBaseContracts": [
          351
        ],
        "name": "UserContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "UserContract.User",
            "id": 231,
            "members": [
              {
                "constant": false,
                "id": 224,
                "mutability": "mutable",
                "name": "_address",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "154:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 223,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "154:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 226,
                "mutability": "mutable",
                "name": "userName",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "181:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 225,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "181:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 228,
                "mutability": "mutable",
                "name": "imgHash",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "207:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 227,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "207:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 230,
                "mutability": "mutable",
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 231,
                "src": "232:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 229,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "232:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 351,
            "src": "131:120:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 235,
            "mutability": "mutable",
            "name": "UserAddrsMap",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "292:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
              "typeString": "mapping(address => struct UserContract.User)"
            },
            "typeName": {
              "id": 234,
              "keyType": {
                "id": 232,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "301:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "292:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                "typeString": "mapping(address => struct UserContract.User)"
              },
              "valueType": {
                "id": 233,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 231,
                "src": "312:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                  "typeString": "struct UserContract.User"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "95f4b27c",
            "id": 238,
            "mutability": "mutable",
            "name": "allUserAddrs",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "337:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 236,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "337:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 237,
              "nodeType": "ArrayTypeName",
              "src": "337:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 242,
            "mutability": "mutable",
            "name": "userNameMap",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "406:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$231_storage_$",
              "typeString": "mapping(string => struct UserContract.User)"
            },
            "typeName": {
              "id": 241,
              "keyType": {
                "id": 239,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "415:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "406:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$231_storage_$",
                "typeString": "mapping(string => struct UserContract.User)"
              },
              "valueType": {
                "id": 240,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 231,
                "src": "425:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$231_storage_ptr",
                  "typeString": "struct UserContract.User"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "2eabe48c",
            "id": 245,
            "mutability": "mutable",
            "name": "allUserNames",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "449:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 243,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "449:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 244,
              "nodeType": "ArrayTypeName",
              "src": "449:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "613:141:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 252,
                          "name": "userNameMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "627:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$231_storage_$",
                            "typeString": "mapping(string memory => struct UserContract.User storage ref)"
                          }
                        },
                        "id": 254,
                        "indexExpression": {
                          "id": 253,
                          "name": "_userName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 247,
                          "src": "639:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "627:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$231_storage",
                          "typeString": "struct UserContract.User storage ref"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 230,
                      "src": "627:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "660:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "627:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 263,
                    "nodeType": "Block",
                    "src": "708:39:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "730:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 251,
                        "id": 262,
                        "nodeType": "Return",
                        "src": "723:12:2"
                      }
                    ]
                  },
                  "id": 264,
                  "nodeType": "IfStatement",
                  "src": "624:123:2",
                  "trueBody": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "665:38:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "687:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 251,
                        "id": 259,
                        "nodeType": "Return",
                        "src": "680:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "50fc3ee2",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniqueUsername",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "_userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "553:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "552:25:2"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "isUnique",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "598:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "597:15:2"
            },
            "scope": 351,
            "src": "529:225:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "864:298:2",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 274,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "893:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 273,
                      "name": "uniqueUsername",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "878:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) view returns (bool)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 315,
                  "nodeType": "IfStatement",
                  "src": "875:280:2",
                  "trueBody": {
                    "id": 314,
                    "nodeType": "Block",
                    "src": "904:251:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 276,
                              "name": "UserAddrsMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 235,
                              "src": "915:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                                "typeString": "mapping(address => struct UserContract.User storage ref)"
                              }
                            },
                            "id": 279,
                            "indexExpression": {
                              "expression": {
                                "id": 277,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "928:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "928:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "915:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage",
                              "typeString": "struct UserContract.User storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 281,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "947:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "947:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 283,
                                "name": "_userName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "959:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 284,
                                "name": "_imgHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 270,
                                "src": "970:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "980:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 280,
                              "name": "User",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "942:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_User_$231_storage_ptr_$",
                                "typeString": "type(struct UserContract.User storage pointer)"
                              }
                            },
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "942:43:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_memory_ptr",
                              "typeString": "struct UserContract.User memory"
                            }
                          },
                          "src": "915:70:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$231_storage",
                            "typeString": "struct UserContract.User storage ref"
                          }
                        },
                        "id": 288,
                        "nodeType": "ExpressionStatement",
                        "src": "915:70:2"
                      },
                      {
                        "expression": {
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 289,
                              "name": "userNameMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "996:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$231_storage_$",
                                "typeString": "mapping(string memory => struct UserContract.User storage ref)"
                              }
                            },
                            "id": 291,
                            "indexExpression": {
                              "id": 290,
                              "name": "_userName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "1008:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "996:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_storage",
                              "typeString": "struct UserContract.User storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 293,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1026:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1026:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 295,
                                "name": "_userName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "1038:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 296,
                                "name": "_imgHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 270,
                                "src": "1049:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1059:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 292,
                              "name": "User",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "1021:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_User_$231_storage_ptr_$",
                                "typeString": "type(struct UserContract.User storage pointer)"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1021:43:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$231_memory_ptr",
                              "typeString": "struct UserContract.User memory"
                            }
                          },
                          "src": "996:68:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$231_storage",
                            "typeString": "struct UserContract.User storage ref"
                          }
                        },
                        "id": 300,
                        "nodeType": "ExpressionStatement",
                        "src": "996:68:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 304,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1093:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1093:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 301,
                              "name": "allUserAddrs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "1075:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1075:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1075:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 307,
                        "nodeType": "ExpressionStatement",
                        "src": "1075:29:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 311,
                              "name": "_userName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "1133:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 308,
                              "name": "allUserNames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 245,
                              "src": "1115:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1115:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                              "typeString": "function (string storage ref)"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1115:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 313,
                        "nodeType": "ExpressionStatement",
                        "src": "1115:28:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "87b162b5",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "809:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "_imgHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "834:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:49:2"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:0:2"
            },
            "scope": 351,
            "src": "789:373:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "1269:59:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 322,
                        "name": "UserAddrsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "1287:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                          "typeString": "mapping(address => struct UserContract.User storage ref)"
                        }
                      },
                      "id": 325,
                      "indexExpression": {
                        "expression": {
                          "id": 323,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1300:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1300:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1287:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$231_storage",
                        "typeString": "struct UserContract.User storage ref"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "userName",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 226,
                    "src": "1287:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 321,
                  "id": 327,
                  "nodeType": "Return",
                  "src": "1280:40:2"
                }
              ]
            },
            "functionSelector": "12958f1c",
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1231:2:2"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "1254:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1253:15:2"
            },
            "scope": 351,
            "src": "1211:117:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "1434:58:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 334,
                        "name": "UserAddrsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "1452:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$231_storage_$",
                          "typeString": "mapping(address => struct UserContract.User storage ref)"
                        }
                      },
                      "id": 337,
                      "indexExpression": {
                        "expression": {
                          "id": 335,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1465:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1465:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1452:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$231_storage",
                        "typeString": "struct UserContract.User storage ref"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "imgHash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 228,
                    "src": "1452:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 333,
                  "id": 339,
                  "nodeType": "Return",
                  "src": "1445:39:2"
                }
              ]
            },
            "functionSelector": "6ef8fa3e",
            "id": 341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserImg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1396:2:2"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "1419:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:15:2"
            },
            "scope": 351,
            "src": "1377:115:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "1580:38:2",
              "statements": [
                {
                  "expression": {
                    "id": 347,
                    "name": "allUserNames",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 245,
                    "src": "1598:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 346,
                  "id": 348,
                  "nodeType": "Return",
                  "src": "1591:19:2"
                }
              ]
            },
            "functionSelector": "e2842d79",
            "id": 350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllUsers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:2:2"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "1563:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 343,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1563:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 344,
                    "nodeType": "ArrayTypeName",
                    "src": "1563:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1562:17:2"
            },
            "scope": 351,
            "src": "1520:98:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 352,
        "src": "96:1525:2"
      }
    ],
    "src": "33:1588:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x96a5D57AeED8E8eB94c19d03e38663F254efE4F3",
      "transactionHash": "0xe28b1b6b46ecd83f6bdfc5fed1ee6327f635ddfc560c6536e6fdcd465d0f7fa2"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-03T20:46:54.809Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}